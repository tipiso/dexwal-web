---
import { getProductsForPaths } from 'src/lib/products';
import SingleProductSection from '@components/ProductPage/SingleProductSection.astro';
import Layout from '@layouts/Layout.astro';
import CertificationSection from '@components/CertificationSection.astro';
import ContactUsSection from '@components/ContactUsSection.astro';
import ProductSection from '@components/HomePage/ProductSection.astro';
import { getTranslations } from 'src/locale/getTranslations';
import ProductWrapper from '@src/components/ProductPage/ProductWrapper.astro';
const locale = Astro.currentLocale;
const t = getTranslations(locale).singleProductPage;

export async function getStaticPaths() {
  const response = await getProductsForPaths();
  const preparedResponse = response.languages.nodes.flatMap((languageProducts) =>
    languageProducts.products.nodes.map((p) => {
      return {
        params: { lang: languageProducts.slug, id: p.id },
        props: { product: p, productsList: response },
      };
    }),
  );
  return preparedResponse;
}
const { product, productsList } = Astro.props;
const pageTitle = product.heroHeader;
---

<Layout pageTitle={pageTitle}>
  {
    productsList.languages.nodes.map((n) => (
      <div id={n.slug} class="invisible">
        {n.products.nodes.map((p) => (
          <li data-heroId={p.heroPhoto.node.id} data-productId={p.id} />
        ))}
      </div>
    ))
  }
  <ProductWrapper>
    <SingleProductSection
      idx={1}
      header={product.heroHeader}
      text={product.heroText}
      photoSrcSet={product.heroPhoto.node.srcSet}
      photoAlt={product.heroPhoto.node.altText}
    />
    <SingleProductSection
      idx={2}
      header={product.introductionHeader}
      text={product.introductionText}
      photoSrcSet={product.introductionPhoto.node.srcSet}
      photoAlt={product.introductionPhoto.node.altText}
    />
    {
      product.moreDetailsPhoto && (
        <SingleProductSection
          idx={3}
          header={product.moreDetailsHeader}
          text={product.moreDetailsText}
          photoSrcSet={product.moreDetailsPhoto.node.srcSet}
          photoAlt={product.moreDetailsPhoto.node.altText}
        />
      )
    }
    {product.cerification && <CertificationSection certificateUrl={product.cerification} />}
    <ContactUsSection classes="sectionBreak" />
    <ProductSection
      classes="sectionBreak"
      linkProducts={true}
      maxVisibleByScreen={true}
      sectionLabel={t.productsSubsectionHeader}
      currentProductId={product.id}
    />
  </ProductWrapper>
</Layout>
